         TITLE 'VTOC COMMAND CHECK  ROUTINE'
***********************************************************************
*         MODIFICATIONS
* NUMBER    DATE    PERSON    REASON
*  001G    072278   GATES     CHANGE MSG MACROS TO VTCMSG TO AVOID
*                              CONFLICT WITH AN EXISTING MSG MACRO.
*  002S    110978   SAVIT     CHANGE COMPARISON ROUTINE FOR DATE OF
*                              LAST USE (MVS RELEASE 3.7 SU60).
*  003G    110182   GATES     CLEAR REG 5 SO HI ORDER IS ZEROED TO
*                              CORRECT LEV PARAMETER CHECK ALSO
*                              END AND CONTAINING CHECK.
*  004G    110383   GATES     FIX BUG WHERE THE PROGRAM USED TO
*                              ASSUME THAT THE FORMAT 1 DSCB POINTED
*                              TO A FORMAT 3 DSCB. ISAM MULTI EXTENT
*                              DATASETS HAVE A FORMAT 1 DSCB POINTING
*                              TO A FORMAT 2 DSCB WHICH IN TURN POINTS
*                              TO A FORMAT 3 DSCB. WE NOW HANDLE ISAM
*                              SPACE STATS ACCURATELY.
*  005G    111683   GATES     ADD LOGIC TO GET EXTENT INFO ON DSCB
*                              TYPES 4, 5, AND 6.
*  006G    111883   GATES     ADD LOGIC KEEP FMT 4 DSCB FROM BEING
*                              PROCESED BY REST OF VTOC COMMAND. IT
*                              WAS ALREADY PROCESSED AT VTOC OPEN BY
*                              THE VTOC CSECT.
*  007G    111883   GATES     PUT VOLSER IN ERROR MESSAGES.
*  008G    112183   GATES     ADD LOGIC TO HANDLE NOTLEV, NOTCON, AND
*                              NOTEND KEYWORDS.
*  009G    050284   GATES     RENAME VTFMT MACRO TO VTCFMT,
*                              RENAME VTLEAVE MACRO TO VTCLEAVE,
*                              RENAME VTOCOM MACRO TO VTCCOM,
*                              RENAME VTOCPARS MACRO TO VTCPARS,
*                              RENAME PDEDSNAM MACRO TO VTCPDEDS,
*                               RENAME ENTER TO VTCENTER,
*                              VTOC MORE TRANSPORTABLE.
*  010G    051084   GATES     EMBED VTOCMAP MACRO TO MAKE
*                              VTOC MORE TRANSPORTABLE.
*  011G    051084   GATES     GET RID OF UNNEEDED LOGIC.
*  012G    051084   GATES     CHANGE CONSTANT FOR END OF TITLE TABLE.
*  013G    051584   GATES     ADD LOGIC FOR AND4/OR4 AND AND5/OR5.
*  014G    051584   GATES     ALLOW OPER OF = > < ¬= ¬< ¬> >= <=.
*  015G    051684   GATES     COMBINE LSTUS AND CDATE/EXPDT LOGIC.
*  016G    051684   GATES     ADD LOGIC FOR DSNAME LIMIT CHECKING.
*  017G    051684   GATES     UPGRADE LOGIC TO WORK WITH DATASETS WHICH
*                              CONTAIN MORE THAN 16 EXTENTS. WHAT I DO
*                              IS SAVE ALL THE FMT3 DSCBS FOR A DATASET
*                              IN VTOCOM.
*  018G    052184   GATES     MOVE CODE TO SPEED PROCESSING UP.
*  019G    111685   GATES     CHANGE LEVEL AND NLEVEL KEYWORDS TO BE
*                              THE HIGH LEVEL INDEX INSTEAD OF THE
*                              BEGINNING CHARACTERS ONLY.
*  020G    111685   GATES     ADD BEGINNING AND NBEGINNING KEYWORDS
*                              TO BE THE START CHARACTERS OF THE HIGH
*                              LEVEL INDEX INSTEAD OF THE WHOLE HIGH
*                              LEVEL INDEX.  THIS USED TO BE THE
*                              LEVEL AND NLEVEL KEYWORDS.
*  021G    122387   GATES     ADD LOGIC TO ALLOW * IN LIMIT/AND/OR
*                              TO MEAN CURRENT DATE WHEN CHECKING DATE
*                              FIELDS.
*  022G    122387   GATES     ADD ANOTHER BASE REG (R10).
*  023G    010488   GATES     ADD LOGIC FOR KEY LENGTH.
*  024G    010488   GATES     CHANGE CONSTANT FOR END OF TITLE TABLE.
*  025G    041388   GATES     ADD LOGIC FOR LOWLEVEL/NOTLOWLEVEL
*                             KEYWORD.
*                                                                     *
*                                                                     *
* TITLE -      VTOC COMMAND CHECK  ROUTINE                            *
*                                                                     *
* FUNCTION -   CHECK THE CONDITIONS SPECIFIED ON THE VTOC COMMAND.    *
*              SEE IF THE DATA SET PASSED SHOULD BE PROCESSED.        *
*              THE LIMIT, ENDING, CONTAINING, CCHH, LIMIT, AND,       *
*              AND OR KEYWORDS ARE PROCESSED BY THIS ROUTINE.         *
*                                                                     *
* OPERATION -  FIRST GET THE LENGTH OF THE DSNAME AND SAVE IT.        *
*              THEN GET THE FORMAT 3 DSCB, IF ONE EXISTS.  TRY        *
*              EACH KEYWORD TO SEE IF IT WILL EXCLUDE THE DATA        *
*              SET FROM FURTHER PROCESSING.                           *
*                                                                     *
* INPUT -      VTOC COMMON AREA ( VTOCOM )                            *
*              POINTED TO BY REGISTER 1                               *
*              USE PARSE DATA, FORMAT 1, 3, AND 4 DSCB'S              *
*              FOR DSORG, RECFM, ALLOC, USED, PROT, CATLG, OR SECAL   *
*              CALL VTOCFORM TO FORMAT THE PARMS.  USE FORMATTED DSCB *
*                                                                     *
* OUTPUT -     A RETURN CODE OF 0 TO CONTINUE PROCESSING OR 8 TO      *
*              EXCLUDE THIS DATA SET.                                 *
*                                                                     *
* ATTRIBUTES - REENTRANT, REUSEABLE, REFRESHABLE.                     *
*                                                                     *
*                                                                     *
*         PROGRAMMED BY R. L. MILLER  (415) 485-6241                  *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
*        MACROS FOR CHECK ROUTINE
*
         MACRO
&LABEL   VTCHL &KEY              CALL THE KEYWORD CHECK ROUTINE
&LABEL   L     R1,SUB&KEY.OPER   GET THE OPERATOR VALUE
         BAL   R8,GETOPER        TRANSLATE TO A NUMBER
         ST    R15,REFOPER       SAVE IT TOO
         LA    R1,SUB&KEY.VALU   GET THE VALUE PDL
         ST    R1,REFVAL         SAVE THAT ADDRESS THREE
         CLI   FLAGNM&KEY,0      HAS IT BEEN CONVERTED?
         BNE   VTP&SYSNDX        YES, SKIP ALONG
         MVI   FLAGNM&KEY,1      NOTE IT AS CONVERTED
         BAL   R8,PDLNUM         GO CONVERT IT
         ST    R15,NUMBER&KEY    SAVE THE VALUE
.*                                IT WILL BE ZERO FOR NONNUMERIC.
         LA    R4,SUB&KEY.KEY    POINT TO THE IKJIDENT FOR THE KEYWORD
         BAL   R8,GETKEY         CONVERT TEXT TO A NUMERIC KEY
         STC   R15,NUMKEY&KEY    SAVE THAT NUMERIC KEY
         LTR   R15,R15           WAS IT SUCCESSFUL?
         BNZ   VTP&SYSNDX        YES, SKIP ALONG
*        ISSUE A MESSAGE - A BAD LIM, AND, OR KEYWORD
         MVC   MSGTEXT2,KEYERR   START THE ERROR MESSAGE
         L     R1,0(R4)          POINT TO THE TEXT
         MVC   MSGTEXT2+49(6),0(R1)  THEN ADD IT TO THE MESSAGE
         VTOCMSG MSGTEXT2        ISSUE THE ERROR MESSAGE
VTP&SYSNDX DS  0H
         SR    R1,R1             CLEAR A REGISTER
         ICM   R1,1,NUMKEY&KEY   GET THE KEYWORD VALUE
         BZ    VTE&SYSNDX        IF NOT SET, SKIP THE EVALUATION
         ST    R1,REFKEY         SAVE THE ADDRESS
         LA    R1,NUMBER&KEY     GET THE ADDRESS OF CONVERTED NUMBER
         ST    R1,REFNUM         SAVE IT'S ADDRESS
         BAL   R8,LIMEVAL        GO EVALUATE THE EXPRESSION
VTE&SYSNDX DS  0H
         MEND
         SPACE 3
         MACRO
&LABEL   VTANDOR &NUM         EVALUATE, THEN DO AND OR OR FUNCTION
&LABEL   CLI   ANDOR&NUM.K+1,0  WAS THIS KEYWORD SET?
         BE    LIMCOMP        NO, JUST CHECK THE FINAL RESULT
         VTCHL &NUM           YES, EVALUATE
         CLI   ANDOR&NUM.K+1,1  WAS IT AN AND ?
         BE    VTA&SYSNDX     YES, DO THE AND
         O     R15,LIMVAL     NO, OR IT
         B     VTE&SYSNDX     FINISHED WITH THIS EXPRESSION
VTA&SYSNDX N   R15,LIMVAL     AND THE EXPRESSION VALUE
VTE&SYSNDX ST  R15,LIMVAL     SAVE THE VALUE
         MEND
         MACRO
&LABEL   VTOCMAP   &FUNC                                         010G
         AIF   ('&FUNC' NE 'EQ').MCALL                           010G
VTCMOPEN EQU   0              DEFINE FUNCTION CODES FOR VTOCMAP. 010G
VTCMADD  EQU   1              DEFINE FUNCTION CODES FOR VTOCMAP. 010G
VTCMCLOS EQU   2              DEFINE FUNCTION CODES FOR VTOCMAP. 010G
VTCMSORT EQU   3              DEFINE FUNCTION CODES FOR VTOCMAP. 010G
         MEXIT
.MCALL   ANOP                 CALL VTOCMAP                       010G
&LABEL   MVI   VTCMFUNC,VTCM&FUNC   SET THE FUNCTION CODE        010G
         VTCALL MAP           GO TO MAP ROUTINE.                 010G
         MEND
*
         EJECT
VTOCCHEK VTCENTER (R12,R10),12   DO THE HOUSEKEEPING         009G022G
         LR    R11,R1         SAVE ADDR OF VTOCOM
         USING VTOCOM,R11     SET ITS ADDRESSABILITY
         L     R9,ADDRANSR    POINT TO THE PARSE ANSWER
         USING PDL,R9         SET ITS ADDRESSABILITY
         USING CHEKWORK,R13   SET ADDRESSABILITY FOR LOCAL WORK AREA
*
*        SEE WHAT THE FORMAT ID IS
*
CHEKFMT  L     R7,DSCBADDR    POINT TO THE DSCB
         LA    R7,8(R7)       GET PAST THE HEADER
         USING FMT1DSEC,R7    SET ADDRESSABILITY                   005G
*        CLI   FORMATK+1,0    DID HE SPECIFY VARIOUS DSCB'S        011G
*        BNE   CHEKFMTI       YES, GO DO HIS CHECKS                011G
*HEKFMTI DS    0H             NOT YET PROGRAMMED                   011G
*
*        STANDARD IS ONLY TO ALLOW FORMAT ONES TO GO
*
         CLI   DS1FMTID,C'1'  IS THIS A FORMAT 1?
         BE    GOTFMT1        YES, SEE IF SHOULD INCLUDE IT.       005G
         CLI   DS1FMTID,C'4'  IS THIS A FORMAT 4?                  005G
         BE    GOTFMT4        YES, KEEP TO GATHER EXTENT INFO ONLY.005G
         CLI   DS1FMTID,C'5'  IS THIS A FORMAT 5?                  005G
         BE    GOTFMT5        YES, KEEP TO GATHER EXTENT INFO ONLY.005G
         CLI   DS1FMTID,C'6'  IS THIS A FORMAT 6?                  005G
         BE    CHECKOUT       EXCLUDE IT;ALREADY DONE ON FMT4.     005G
         B     CHECKOUT       EXCLUDE IT FROM MORE PROCESSING.     005G
*
*              FIRST SEE HOW BIG THE DSNAME IS
*
GOTFMT1  LA    R1,DS1FMTID    POINT PAST THE DSNAME                005G
         TRT   DS1DSNAM,BLKTRTAB  FIND THE FIRST BLANK
         SR    R1,R7          SUBTRACT TO GET THE LENGTH
         STH   R1,DSNLEN      SAVE THE DSNAME LENGTH
         LR    R3,R1          KEEP THE LENGTH FOR LATER
*
*        GET THE FORMAT 3 DSCB, IF IT EXISTS
*
*MT3GET  XC    FMT3,FMT3      CLEAR IT FIRST.                  004G018G
FMT3GET  CLC   DS1PTRDS,=XL5'0000000000'  IS THERE A FORMAT 3?     018G
         BE    FMT3LAST       NO, SKIP ALONG.                      018G
*        XC    FMT3,FMT3      CLEAR FORMAT 3 WORK AREA.            018G
         LA    R0,FMT3        GET A(FORMAT 3 WORK AREA).           017G
         XR    R1,R1          CLEAR FORMAT 3 WORK AREA.            017G
         LR    R4,R0          GET A(FORMAT 3 WORK AREA).           017G
         LA    R5,FMT3LEN     GET L(FORMAT 3 WORK AREA).           017G
         MVCL  R4,R0          CLEAR FORMAT 3 WORK AREA.            017G
         LA    R4,FMT3        GET A(WORK AREA BEGINNING).          017G
FMT3NEXT CLC   DS1PTRDS,=XL5'0000000000'  IS THERE ANOTHER FMT3?   017G
         BE    FMT3LAST       NO, I'VE HIT LAST ONE.               017G
         LA    R1,DS1PTRDS    GET THE CCHHR ADDRESS OF NEXT FMT3.  017G
*        LA    R15,FMT3       POINT TO TEMP AREA FOR THE DSCB3.005G017G
         LR    R15,R4         GET A(NEXT AVAIL FMT3 SLOT).         017G
         BAL   R2,OBTAINIT             GET THE RECORD.             005G
         LTR   R15,R15        TEST THE RETURN CODE
         BNZ   OBT3ERR        BAD NEWS, ISSUE THE MESSAGE
*        CLI   DS3FMTID,C'2'  IS IT A FORMAT 2 DSCB?               004G
*        BNE   FMT3NO         NO, GO PROCESS FORMAT 3 DSCB.        004G
         CLI   44(R4),C'2'    IS IT A FORMAT 2 DSCB?          004G 017G
         BNE   FMT3YES        NO, GO PROCESS FORMAT 3 DSCB.        017G
         MVC   DS1PTRDS,135(R4)   MOVE REAL FORMAT 3 POINTER       004G
*                                   FROM THE FORMAT 2 DSCB.        004G
         B     FMT3GET        GET THE FORMAT 3.                    004G
FMT3YES  MVC   DS1PTRDS,135(R4)  GET NEXT FORMAT 3 POINTER.        017G
*        MAKE 13 CONTIGUOUS EXTENTS.                               017G
         MVC   0(40,R4),4(R4)    SHOVE FIRST 4 EXT LEFT.           017G
         MVC   40(90,R4),45(R4)  SHOVE NEXT 9 EXT LEFT.            017G
         LA    R4,130(R4)     GET A(NEXT AVAIL FMT3 SLOT).         017G
         B     FMT3NEXT       GET THE NEXT FORMAT 3.               017G
FMT3LAST DS    0H                                                  017G
*
*        PROCESS THE LEVEL KEYWORD
*
FMT3NO   CLI   LEVKEY+1,0     WAS LEVEL SPECIFIED?
         BE    LEVEND         NO, SKIP ON.
         LA    R4,LEVEL       ASSUME LEVEL SPECIFIED.
         USING PDEDSNAM,R4    SET ADDRESSABILITY
         LR    R2,R7          POINT TO THE START OF THE DSNAME
LEVNEXT  SR    R5,R5          CLEAR REG 5.                         003G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH           003G
         BZ    CHECKOUT       END OF THE LINE, EXCLUDE IT
         L     R6,PDEDSN      POINT TO THE LEVEL
         CR    R3,R5          COMPARE LENGTHS
         BL    LEVINC         THIS LEVEL IS LONGER THAN DSN, NO MATCH
         AR    R7,R5          BUMP TO WHERE PERIOD SHOULD BE.      019G
         CLC   0(1,R7),PERIOD THERE BETTER BE A PERIOD HERE.       019G
         BE    LEVCHK         IF PERIOD COMPARE LEVEL CHARACTERS.  019G
         SR    R7,R5          RESET TO START OF DSNAME.            019G
         B     LEVINC         THIS LEVEL WON'T MATCH.              019G
LEVCHK   SR    R7,R5          RESET TO START OF DSNAME.            019G
         BCTR  R5,0           MINUS ONE FOR THE EX
         EX    R5,COMPARE     CHECK THE LENGTHS
         BE    LEVEND         IT MATCHES, ALLOW IT.
LEVINC   ICM   R4,B'0111',PDEDCHN GET THE NEXT LEVEL PDE POINTER
         BNZ   LEVNEXT        IF IT'S THERE, KEEP LOOKING
         B     CHECKOUT       NO MATCHES, EXCLUDE THIS DSNAME
LEVEND   DS    0H
         DROP  R4             FINISHED WITH THE PDE
*                                                                  020G
*        PROCESS THE BEGINNING KEYWORD                             020G
*                                                                  020G
         CLI   BEGKEY+1,0     WAS BEGINNING SPECIFIED?             020G
         BE    BEGEND         NO, SKIP ON.                         020G
         LA    R4,BEGIN       ASSUME BEGINNING SPECIFIED.          020G
         USING PDEDSNAM,R4    SET ADDRESSABILITY                   020G
         LR    R2,R7          POINT TO THE START OF THE DSNAME     020G
BEGNEXT  SR    R5,R5          CLEAR REG 5.                         020G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH           020G
         BZ    CHECKOUT       END OF THE LINE, EXCLUDE IT          020G
         L     R6,PDEDSN      POINT TO THE BEGIN                   020G
         CR    R3,R5          COMPARE LENGTHS                      020G
         BL    BEGINC         BEGIN IS LONGER THAN DSN, NO MATCH   020G
         BCTR  R5,0           MINUS ONE FOR THE EX                 020G
         EX    R5,COMPARE     CHECK THE LENGTHS                    020G
         BE    BEGEND         IT MATCHES, ALLOW IT.                020G
BEGINC   ICM   R4,B'0111',PDEDCHN GET THE NEXT BEGIN PDE POINTER   020G
         BNZ   BEGNEXT        IF IT'S THERE, KEEP LOOKING          020G
         B     CHECKOUT       NO MATCHES, EXCLUDE THIS DSNAME      020G
BEGEND   DS    0H                                                  020G
         DROP  R4             FINISHED WITH THE PDE                020G
*
*        PROCESS THE NOTLEVEL KEYWORD
*
         CLI   NLEVKEY+1,0    WAS NOTLEVEL SPECIFIED?            008G
         BE    NLEVEND        NO, SKIP ON.                       008G
         LA    R4,NLEVEL      YES, POINT TO PDE.                 008G
         USING PDEDSNAM,R4    SET ADDRESSABILITY                 008G
         LR    R2,R7          POINT TO THE START OF THE DSNAME   008G
NLEVNEXT SR    R5,R5          CLEAR REG 5.                       008G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH         008G
         BZ    NLEVEND        END OF THE LINE, INCLUDE IT        008G
         L     R6,PDEDSN      POINT TO THE LEVEL                 008G
         CR    R3,R5          COMPARE LENGTHS                    008G
         BL    NLEVINC        LEVEL IS LONGER THAN DSN, NO MATCH 008G
         AR    R7,R5          BUMP TO WHERE PERIOD SHOULD BE.      019G
         CLC   0(1,R7),PERIOD THERE BETTER BE A PERIOD HERE.       019G
         BE    NLEVCHK        IF PERIOD COMPARE LEVEL CHARACTERS.  019G
         SR    R7,R5          RESET TO START OF DSNAME.            019G
         B     NLEVINC        NO PERIOD, WON'T MATCH.              019G
NLEVCHK  SR    R7,R5          RESET TO START OF DSNAME.            019G
         BCTR  R5,0           MINUS ONE FOR THE EX               008G
         EX    R5,COMPARE     CHECK THE LENGTHS                  008G
         BE    CHECKOUT       IT MATCHES, EXCLUDE IT.            008G
NLEVINC  ICM   R4,B'0111',PDEDCHN GET THE NEXT LEVEL PDE POINTER 008G
         BNZ   NLEVNEXT       IF IT'S THERE, KEEP LOOKING        008G
         B     NLEVEND        NO MATCHES, INCLUDE THIS DSNAME    008G
NLEVEND  DS    0H                                                008G
         DROP  R4             FINISHED WITH THE PDE              008G
*                                                                  020G
*        PROCESS THE NOTBEGINNING KEYWORD                          020G
*                                                                  020G
         CLI   NBEGKEY+1,0    WAS NBEGIN SPECIFIED?                020G
         BE    NBEGEND        NO, SKIP ON.                         020G
         LA    R4,NBEGIN      YES, POINT TO PDE.                   020G
         USING PDEDSNAM,R4    SET ADDRESSABILITY                   020G
         LR    R2,R7          POINT TO THE START OF THE DSNAME     020G
NBEGNEXT SR    R5,R5          CLEAR REG 5.                         020G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH           020G
         BZ    NBEGEND        END OF THE LINE, INCLUDE IT          020G
         L     R6,PDEDSN      POINT TO THE NBEGIN VALUE.           020G
         CR    R3,R5          COMPARE LENGTHS                      020G
         BL    NBEGINC        NBEGIN IS LONGER THAN DSN, NO MATCH  020G
         BCTR  R5,0           MINUS ONE FOR THE EX                 020G
         EX    R5,COMPARE     CHECK THE LENGTHS                    020G
         BE    CHECKOUT       IT MATCHES, EXCLUDE IT.              020G
NBEGINC  ICM   R4,B'0111',PDEDCHN GET THE NEXT NBEGIN PDE POINTER  020G
         BNZ   NBEGNEXT       IF IT'S THERE, KEEP LOOKING          020G
         B     NBEGEND        NO MATCHES, INCLUDE THIS DSNAME      020G
NBEGEND  DS    0H                                                  020G
         DROP  R4             FINISHED WITH THE PDE                020G
*
*        PROCESS THE ENDING KEYWORD
*
         CLI   ENDKEY+1,0     WAS ENDING SPECIFIED?
         BE    ENDEND         NO, SKIP ON
         LA    R4,ENDING      YES, POINT TO THE PDE
         USING PDEDSNAM,R4    SET ADDRESSABILITY
ENDNEXT  SR    R5,R5          CLEAR HI ORDER OF REG 5.            003G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH          003G
         BZ    CHECKOUT       END OF THE LINE, EXCLUDE IT
         L     R6,PDEDSN      POINT TO THE ENDING
         CR    R3,R5          COMPARE LENGTHS
         BL    ENDINC         THIS ENDING IS LONGER THAN DSN, NO MATCH
         LR    R2,R7          POINT TO THE START OF THE DSNAME
         AR    R2,R3          POINT TO THE END
         SR    R2,R5          BACKUP TO COMPARE THIS LENGTH
         BCTR  R5,0           MINUS ONE FOR THE EX
         EX    R5,COMPARE     CHECK THE LENGTHS
         BE    ENDEND         IT MATCHES, ALLOW IT
ENDINC   ICM   R4,B'0111',PDEDCHN GET THE NEXT ENDING PDE POINTER
         BNZ   ENDNEXT        IF IT'S THERE, KEEP LOOKING
         B     CHECKOUT       NO MATCHES, EXCLUDE THIS DSNAME
ENDEND   DS    0H
         DROP  R4             FINISHED WITH THE PDE
*
*        PROCESS THE NOTENDING KEYWORD
*
         CLI   NENDKEY+1,0    WAS NOTENDING SPECIFIED?            008G
         BE    NENDEND        NO, SKIP ON                         008G
         LA    R4,NENDING     YES, POINT TO THE PDE               008G
         USING PDEDSNAM,R4    SET ADDRESSABILITY                  008G
NENDNEXT SR    R5,R5          CLEAR HI ORDER OF REG 5.            008G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH          008G
         BZ    NENDEND        END OF THE LINE, INCLUDE IT         008G
         L     R6,PDEDSN      POINT TO THE ENDING                 008G
         CR    R3,R5          COMPARE LENGTHS                     008G
         BL    NENDINC        NOTENDING IS LONGER THAN DSN, NO MATCH
         LR    R2,R7          POINT TO THE START OF THE DSNAME    008G
         AR    R2,R3          POINT TO THE END                    008G
         SR    R2,R5          BACKUP TO COMPARE THIS LENGTH       008G
         BCTR  R5,0           MINUS ONE FOR THE EX                008G
         EX    R5,COMPARE     CHECK THE LENGTHS                   008G
         BE    CHECKOUT       IT MATCHES, EXCLUDE IT.             008G
NENDINC  ICM   R4,B'0111',PDEDCHN GET THE NEXT ENDING PDE POINTER 008G
         BNZ   NENDNEXT       IF IT'S THERE, KEEP LOOKING         008G
         B     NENDEND        NO MATCHES, INCLUDE THIS DSNAME     008G
NENDEND  DS    0H                                                 008G
         DROP  R4             FINISHED WITH THE PDE               008G
*                                                                  025G
*        PROCESS THE LOWLEVEL KEYWORD                              025G
*                                                                  025G
         CLI   LOWKEY+1,0     WAS LOWLEVEL SPECIFIED?              025G
         BE    LOWEND         NO, SKIP ON.                         025G
         LA    R4,LOWLEV      ASSUME LOWLEVEL SPECIFIED.           025G
         USING PDEDSNAM,R4    SET ADDRESSABILITY.                  025G
LOWNEXT  SR    R5,R5          CLEAR REG 5.                         025G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH.          025G
         BZ    CHECKOUT       END OF THE LINE, EXCLUDE IT.         025G
         L     R6,PDEDSN      POINT TO THE LOWLEVEL.               025G
         CR    R3,R5          COMPARE LENGTHS.                     025G
         BL    LOWINC         LOWLEVEL IS LONGER THAN DSN, NO MATCH025G
         LR    R2,R7          POINT TO THE START OF THE DSNAME.    025G
         AR    R2,R3          POINT TO THE END.                    025G
         SR    R2,R5          BACKUP TO COMPARE THIS LENGTH.       025G
         BCTR  R2,0           SUBTRACT ONE TO CHECK FOR PERIOD.    025G
         CLC   0(1,R2),PERIOD THERE BETTER BE A PERIOD HERE.       025G
         LA    R2,1(R2)       RESET TO STRING TO COMPARE.          025G
         BNE   LOWINC         THIS LOWLEVEL WON'T MATCH.           025G
         BCTR  R5,0           MINUS ONE FOR THE EX.                025G
         EX    R5,COMPARE     CHECK THE LENGTHS.                   025G
         BE    LOWEND         IT MATCHES, ALLOW IT.                025G
LOWINC   ICM   R4,B'0111',PDEDCHN GET THE NEXT LOWLEVEL PDE POINTER025G
         BNZ   LOWNEXT        IF IT'S THERE, KEEP LOOKING          025G
         B     CHECKOUT       NO MATCHES, EXCLUDE THIS DSNAME      025G
LOWEND   DS    0H                                                  025G
         DROP  R4             FINISHED WITH THE PDE                025G
*                                                                  025G
*        PROCESS THE NOTLOWLEVEL KEYWORD                           025G
*                                                                  025G
         CLI   NLOWKEY+1,0    WAS NLOWLEV SPECIFIED?               025G
         BE    NLOWEND        NO, SKIP ON.                         025G
         LA    R4,NLOWLEV     ASSUME NLOWLEV SPECIFIED.            025G
         USING PDEDSNAM,R4    SET ADDRESSABILITY.                  025G
NLOWNEXT SR    R5,R5          CLEAR REG 5.                         025G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH.          025G
         BZ    NLOWEND        END OF THE LINE, INCLUDE IT.         025G
         L     R6,PDEDSN      POINT TO THE NLOWLEV.                025G
         CR    R3,R5          COMPARE LENGTHS.                     025G
         BL    NLOWINC        NLOWLEV IS LONGER THAN DSN, NO MATCH.025G
         LR    R2,R7          POINT TO THE START OF THE DSNAME.    025G
         AR    R2,R3          POINT TO THE END.                    025G
         SR    R2,R5          BACKUP TO COMPARE THIS LENGTH.       025G
         BCTR  R2,0           SUBTRACT ONE TO CHECK FOR PERIOD.    025G
         CLC   0(1,R2),PERIOD THERE BETTER BE A PERIOD HERE.       025G
         LA    R2,1(R2)       RESET TO STRING TO COMPARE.          025G
         BNE   NLOWINC        THIS NLOWLEV WON'T MATCH.            025G
         BCTR  R5,0           MINUS ONE FOR THE EX.                025G
         EX    R5,COMPARE     CHECK THE LENGTHS.                   025G
         BE    CHECKOUT       IT MATCHES, EXCLUDE IT.              025G
NLOWINC  ICM   R4,B'0111',PDEDCHN GET THE NEXT NLOWLEV PDE POINTER.025G
         BNZ   NLOWNEXT       IF IT'S THERE, KEEP LOOKING          025G
         B     NLOWEND        NO MATCHES, INCLUDE THIS DSNAME      025G
NLOWEND  DS    0H                                                  025G
         DROP  R4             FINISHED WITH THE PDE                025G
*
*        PROCESS THE CONTAINING KEYWORD
*
         CLI   CONTAINK+1,0   WAS CONTAINING SPECIFIED?
         BE    CONEND         NO, SKIP ON
         LA    R4,CONTAIN     YES, POINT TO THE PDE
         USING PDEDSNAM,R4    SET ADDRESSABILITY
CONNEXT  SR    R5,R5          CLEAR HIORDER OF REG 5.             003G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH          003G
         BZ    CHECKOUT       END OF THE LINE, EXCLUDE IT
         L     R6,PDEDSN      POINT TO THE CONTAINING
         CR    R3,R5          COMPARE LENGTHS
         BL    CONINC         THIS CONTAIN IS LONGER THAN DSN, NO MATCH
         LR    R1,R7          POINT TO THE START OF THE DSNAME
         AR    R1,R3          POINT TO THE END
         SR    R1,R5          BACKUP TO COMPARE THIS LENGTH - LAST ONE
         LR    R2,R7          POINT TO THE START OF THE DSNAME
         BCTR  R5,0           MINUS ONE FOR THE EX
CONCOMP  EX    R5,COMPARE     CHECK THE LENGTHS
         BE    CONEND         IT MATCHES, ALLOW IT
         LA    R2,1(R2)       CHECK THE WHOLE DSNAME
         CR    R2,R1          CHECK FOR THE END OF THE REAL DSN
         BNH   CONCOMP        NOT THERE YET
CONINC   ICM   R4,B'0111',PDEDCHN GET THE NEXT CONTAINING PDE POINTER
         BNZ   CONNEXT        IF IT'S THERE, KEEP LOOKING
         B     CHECKOUT       NO MATCHES, EXCLUDE THIS DSNAME
CONEND   DS    0H
         DROP  R4             FINISHED WITH THE PDE
*
*        PROCESS THE NOTCONTAINING KEYWORD
*
         CLI   NCONKEY+1,0    WAS NOTCONTAINING SPECIFIED?        008G
         BE    NCONEND        NO, SKIP ON                         008G
         LA    R4,NCONTAIN    YES, POINT TO THE PDE               008G
         USING PDEDSNAM,R4    SET ADDRESSABILITY                  008G
NCONNEXT  SR    R5,R5         CLEAR HIORDER OF REG 5.             008G
         ICM   R5,B'0011',PDEDSNL  GET THE DSNAME LENGTH          008G
         BZ    NCONEND        END OF THE LINE, INCLUDE IT         008G
         L     R6,PDEDSN      POINT TO THE NOTCONTAINING          008G
         CR    R3,R5          COMPARE LENGTHS                     008G
         BL    NCONINC        NOTCONTAIN IS LONGER THAN DSN, NO MATCH
         LR    R1,R7          POINT TO THE START OF THE DSNAME    008G
         AR    R1,R3          POINT TO THE END                    008G
         SR    R1,R5          BACKUP TO COMPARE THIS LENGTH - LAST ONE
         LR    R2,R7          POINT TO THE START OF THE DSNAME    008G
         BCTR  R5,0           MINUS ONE FOR THE EX                008G
NCONCOMP EX    R5,COMPARE     CHECK THE LENGTHS                   008G
         BE    CHECKOUT       IT MATCHES, EXCLUDE IT.             008G
         LA    R2,1(R2)       CHECK THE WHOLE DSNAME              008G
         CR    R2,R1          CHECK FOR THE END OF THE REAL DSN   008G
         BNH   NCONCOMP       NOT THERE YET                       008G
NCONINC  ICM   R4,B'0111',PDEDCHN GET THE NEXT CONTAINING PDE POINTER
         BNZ   NCONNEXT       IF IT'S THERE, KEEP LOOKING         008G
         B     NCONEND        NO MATCHES, INCLUDE THIS DSNAME     008G
NCONEND  DS    0H                                                 008G
         DROP  R4             FINISHED WITH THE PDE               008G
*
*        NOW THE BIG MESS, CHECK FOR LIMIT, AND'S, AND OR'S
*
         CLI   LIMITK+1,0     WAS LIMIT SPECIFIED
         BE    LIMEND         NO, THEN THERE CAN BE NO AND'S OR OR'S
         NI    VTCFMTCK,255-VTCFMTCC  TURN OFF THE ROUTINE CALL FLAG
         VTCHL L              EVALUATE THE LIMIT 1=TRUE 0=FALSE
         ST    R15,LIMVAL     SAVE THE ANSWER
         VTANDOR 1            CHECK AND1 OR OR1
         VTANDOR 2            CHECK AND2 OR OR2
         VTANDOR 3            CHECK AND3 OR OR3
         VTANDOR 4            CHECK AND4 OR OR4                    013G
         VTANDOR 5            CHECK AND5 OR OR5                    013G
LIMCOMP  L     R15,LIMVAL     GET THE RESULT OF ALL THIS
         LTR   R15,R15        TEST IT
         BZ    CHECKOUT       IT GETS EXCLUDED
LIMEND   DS    0H
         B     CHECKIN        ALL TESTS PASSED, INCLUDE THIS ONE
         SPACE 5
*
*        EVALUATION ROUTINE FOR   KEYWORD  OPER  VALUE
*
LIMEVAL  L     R5,REFKEY      GET THE KEYWORD VALUE
         MH    R5,H12         MULTIPLY IT BY 12
         A     R5,ATABTITL    THEN RELOCATE IT
*        SR    R10,R10        CLEAR THE ROUTINE POINTER            022G
         SR    R2,R2          CLEAR THE ROUTINE POINTER            022G
         TM    1(R5),X'80'    IS IT A FORMATTED ITEM?
         BO    LIMFORM        YES, GO DO IT
         SR    R6,R6          CLEAR A REGISTER
         IC    R6,2(R5)       GET THE OFFSET INTO VTFMT
*        IC    R10,1(R5)      GET THE ROUTINE NUMBER               022G
         IC    R2,1(R5)       GET THE ROUTINE NUMBER               022G
*        LTR   R10,R10        SEE IF IT'S A GOOD NUMBER            022G
         LTR   R2,R2          SEE IF IT'S A GOOD NUMBER            022G
         BP    LIMEVAL1       IT'S ALL RIGHT
LIMABEND ABEND 702,DUMP       CRASH AND BURN
*IMEVAL1 B     *(R10)         AND GO TO IT                         022G
LIMEVAL1 B     *(R2)          AND GO TO IT                         022G
         B     LIMDATE      4 CDATE, EXPDT, LAST USE DATES.        015G
         B     LIMCCHH      8 CCHH CHECKING.                       016G
         B     LIMFORM     12 FORM , USED SPACE
         B     LIMFORM     16 UNUSED SPACE
         B     LIMFORM     20 PCT USED
         B     LIMEXT      24 EXTENTS
         B     LIMBLREC    28 LRECL, BLKSZ, SEC Q
*        B     LIMCCHH     32 CCHH CHECKING                        016G
         B     LIMFORM     32 DSN CHECKING.                        016G
         B     LIMKEYLE    36 KEY LENGTH CHECKING.                 023G
         SPACE 5
*
*        PERFORM THE FORMATTED ITEM CHECKING
*
LIMFORM  DS    0H
         TM    VTCFMTCK,VTCFMTCC  WAS FORMAT CALLED BEFORE FOR THIS DS
         BO    LIMFCALD       YES, DON'T CALL IT AGAIN
         VTCALL FORM          NO, CALL IT TO GET THE ITEMS
         OI    VTCFMTCK,VTCFMTCC+VTCFMTCD  THEN SET THE SWITCHES
*IMFCALD SR    R2,R2          CLEAR A WORK REG                     022G
LIMFCALD DS    0H                                                  022G
         A     R6,FORMATAD   RELOCATE THE BLOCK
*        B     *+4(R10)         AND GO TO IT                       022G
         B     *+4(R2)          AND GO TO IT                       022G
         B     LIMFORMA     0 FORMATTED ITEM
         B     LIMABEND     4 CDATE, EXPDT, LAST USE DATE.         015G
         B     LIMABEND     8 CCHH.                                016G
         B     LIMALLOC    12 ALLOC, USED SPACE
         B     LIMUNUSD    16 UNUSED SPACE
         B     LIMPCT      20 PCT USED
         B     LIMABEND    24 EXTENTS                              016G
         B     LIMABEND    28 LRECL, BLKSZ, SECQ                   016G
         B     LIMDSN      32 DSNAME                               016G
LIMFORMA DS    0H
         SR    R2,R2          CLEAR A WORK REG                     022G
         IC    R2,2(R5)       GET THE OFFSET IN VTFMT
         A     R2,FORMATAD    THEN RELOCATE IT
         L     R4,REFVAL      GET THE VALUE PDE
         LH    R3,4(R4)       GET THE LENGTH OF THE STRING
         L     R1,0(R4)       AND ITS ADDRESS
*
*        DO THE ACTUAL COMPARE
*
         BCTR  R3,0           DOWN ONE FOR AN EX
         EX    R3,COMPLIM     COMPARE AS SPECIFIED
COMPDONE DS    0H             GET THE OPERATOR ADDRESS
         BL    COMPLOW        CHECK THE OPERATOR, VALUE LESS THAN ITEM
         BE    COMPEQ         CHECK THE OPERATOR, KEYWORD EQUALS VALUE
*                             KEYWORD IS GREATER THAN THE VALUE
COMPHI   CLI   REFOPER+3,NE       WAS OPERATOR NE
         BE    COMPYES        HIGH SATISFIES THE EXPRESSION
         CLI   REFOPER+3,GT       ALSO FOR GT
         BE    COMPYES        HIGH SATISFIES THE EXPRESSION
         CLI   REFOPER+3,GE       AND FOR GE
         BE    COMPYES        HIGH SATISFIES THE EXPRESSION
         B     COMPNO         THIS ONE DOESN'T FIT
*                             KEYWORD IS EQUAL TO THE VALUE
COMPEQ   CLI   REFOPER+3,EQ       WAS OPERATOR EQ
         BE    COMPYES        EQ   SATISFIES THE EXPRESSION
         CLI   REFOPER+3,LE       ALSO FOR LE
         BE    COMPYES        EQ   SATISFIES THE EXPRESSION
         CLI   REFOPER+3,GE       AND FOR GE
         BE    COMPYES        EQ   SATISFIES THE EXPRESSION
         B     COMPNO         THIS ONE DOESN'T FIT
*                             KEYWORD IS LESS THAN THE VALUE
COMPLOW  CLI   REFOPER+3,NE       WAS OPERATOR NE
         BE    COMPYES        LOW  SATISFIES THE EXPRESSION
         CLI   REFOPER+3,LT       ALSO FOR LT
         BE    COMPYES        LOW  SATISFIES THE EXPRESSION
         CLI   REFOPER+3,LE       AND FOR LE
         BE    COMPYES        LOW  SATISFIES THE EXPRESSION
         B     COMPNO         THIS ONE DOESN'T FIT
*
*        IT FITS OR IT DOESN'T
*
COMPYES  LA    R15,1          SET A TRUE VALUE
         BR    R8             THEN RETURN
COMPNO   SR    R15,R15        SET A FALSE VALUE
         BR    R8             THEN RETURN
*
*        SPECIAL ROUTINES TO CHECK NON-FORMATTED ITEMS
*
LIMDATE  DS    0H
*
*        COMPARE DATES
*
         LA    R14,DS1CREDT        POINT TO CREATION DATE.         015G
         CLI   REFKEY+3,CDATE      IS THAT WHAT I'M COMPARING?     015G
         BE    LIMDGET             YES, USE IT.                    015G
         LA    R14,DS1EXPDT        NO, POINT TO EXPIRATION DATE.   015G
         CLI   REFKEY+3,EXPDT      IS THAT WHAT I'M COMPARING?     015G
         BE    LIMDGET             YES, USE IT.                    015G
         LA    R14,DS1REFD         NO, USE LAST REFERENCED DATE.   015G
LIMDGET  SR    R15,R15       CLEAR A WORK REG
         IC    R15,0(R14)    GET THE YEAR
         MH    R15,H1000     TIMES 1000
         SR    R1,R1         CLEAR ANOTHER WORK REG
         ICM   R1,3,1(R14)    GET THE DAYS
         AR    R15,R1        PUT THE DATE TOGETHER
         L     R1,REFNUM     GET THE ADDRESS OF THE VALUE
         L     R1,0(R1)      GET THE VALUE ITSELF
         LTR   R1,R1         SEE IF NON-NUMERIC.                   021G
         BNZ   COMPDATE      NON-ZERO MEANS NUMERIC DATE PRESENT.  021G
*                            ZERO MEANS NON-NUMERIC DATE PRESENT.  021G
         L     R2,REFVAL     GET THE VALUE PDE.                    021G
         L     R3,0(R2)      GET A(STRING).                        021G
         CLI   0(R3),C'*'    SEE IF CURRENT DATE SHOULD BE USED.   021G
         BE    LIMDGET1      YES, GET SYSTEM CURRENT DATE.         021G
         VTOCMSG BADDATE     ONLY NUMERIC OR * ALLOWED ISSUE MSG   021G
LIMDGET1 L     R4,CVTPTR     GET A(CVT).                           021G
         USING CVTMAP,R4     TELL ASSEMBLER.                       021G
         XC    CHEKDBLW,CHEKDBLW CLEAR WORK AREA.                  021G
         MVC   CHEKDBLW+4(4),CVTDATE   MOVE CURRENT DATE.          021G
         DROP  R4            UNTELL ASSEMBLER.                     021G
         CVB   R1,CHEKDBLW   CONVERT CURRENT DATE TO BINARY.       021G
         LH    R4,4(R2)      GET L(STRING).                        021G
         CH    R4,H3         SEE IF ADD'L INFO.                    021G
         BL    COMPDATE      NO, GO COMPARE DATES.                 021G
         LA    R3,1(R3)      POINT A(STRING) PAST *.               021G
         ST    R3,0(R2)      RESET A(STRING) IN PDL.               021G
         BCT   R4,0          DECREMENT L(STRING) BY ONE.           021G
         ST    R4,4(R2)      RESET L(STRING) IN PDL.               021G
         LR    R1,R2         POINT TO VALUE PDL.                   021G
         LR    R2,R15        SAVE KEYWORD DATE VALUE.              021G
         LR    R3,R1         SAVE CURRENT DATE VALUE.              021G
         BAL   R8,PDLNUM     GO CONVERT IT.                        021G
         AR    R15,R3        CURRENT DATE + OFFSET NUMBER OF DAYS. 021G
         LR    R1,R15        SET UP REFVALUE DATE FOR COMPARE.     021G
         LR    R15,R2        SET UP KEYWORD DATE VALUE FOR COMPARE.021G
COMPDATE CR    R15,R1        COMPARE DATES.                        021G
         B     COMPDONE      GO CHECK OPERANDS.
*IMLUSE  DS    0H                                                  015G
*
*        LAST USE DATE   --- MODIFIED FOR MVS SU60.                002S
*
*        LA    R14,75(,R7)   POINT TO THE DATE-LAST-USE FIELD  002S015G
*        B     LIMDGET       USE THE STANDARD DATE TEST LOGIC  002S015G
*                                                                  002S
**       THE ORIGINAL CODE BELOW INVALID WITH MVS SU60 (GIVES 0C7) 002S
*                                                                  002S
*        SR    R14,R14       CLEAR THE DATE
*        CLC   ZERO,75(R7)   CHECK FOR NO DATA
*        BE    LIMLUCMP      RIGHT, SKIP ON
*        MVC   CHEKDBLW+5(3),75(R7)  MOVE IN THE LAST USE DATE
*        CVB   R14,CHEKDBLW  CONVERT IT TO BINARY
*LIMLUCMP L    R1,REFNUM     GET THE ADDRESS OF THE VALUE
*        L     R1,0(R1)      GET THE VALUE
*        CR    R14,R1        DO THE COMPARE
*        B     COMPDONE      THEN CHASE DOWN THE OPERANDS
LIMEXT   DS    0H
*
*        EXTENTS
*
         L     R1,REFNUM     GET THE COMPARE VALUE ADDRESS
         CLC   DS1NOEPV,3(R1)        COMPARE THEM
         B     COMPDONE      GO CHECK OPERANDS
LIMBLREC DS    0H
*
*        LRECL, BLKSZ, SECQ
*
         L     R1,REFNUM     GET THE ADDRESS OF THE COMPARE VALUE
         L     R15,0(R1)      THEN GET THE VALUE ITSELF
         CLI   REFKEY+3,BLKSZ      BLOCK SIZE?
         BNE   LIMB1         NO, KEEP CHECKING
         LH    R1,DS1BLKL    COMPARE TO THE BLOCK SIZE
         CR    R1,R15        COMPARE THEM
         B     COMPDONE      GO SIFT THROUGH THE OPERANDS
LIMB1    CLI   REFKEY+3,LRECL  LOGICAL RECORD LENGTH
         BNE   LIMB2         NO, KEEP GOING
         LH    R1,DS1LRECL   COMPARE TO THE LRECL
         CR    R1,R15        COMPARE THEM
         B     COMPDONE      GO CHECK THE OPERANDS
LIMB2    MVC   HWORK,DS1SCALO+2 GET THE SECONDARY QUANTITY
         LH    R1,HWORK      DO THE COMPARE
         CR    R1,R15        COMPARE THEM
         B     COMPDONE      THEN CHECK THE OPERANDS
*                                                                  023G
*        KEY LENGTH                                                023G
*                                                                  023G
LIMKEYLE DS    0H                                                  023G
         L     R1,REFNUM     GET THE COMPARE VALUE ADDRESS         023G
         CLC   DS1KEYL,3(R1) COMPARE THEM                          023G
         B     COMPDONE      GO CHECK OPERANDS                     023G
*
*        SPACE CHECKING ROUTINES
*
LIMALLOC DS    0H
*
*        ALLOC AND USED
*
         SR    R2,R2          CLEAR A WORK REG                     022G
         L     R1,REFNUM     GET THE ADDRESS OF THE CONVERTED NUMBER
         L     R1,0(R1)      GET THE VALUE
         L     R15,0(R6)     GET THE AMOUNT
         CR    R15,R1        COMPARE THEM
         B     COMPDONE      THEN CHECK THE OPERANDS
LIMUNUSD DS    0H
*
*        UNUSED
*
         SR    R2,R2          CLEAR A WORK REG                     022G
         L     R6,FORMATAD   POINT TO THE FORMATTED VTOC
         USING VTFMT,R6      SET ADDRESSABILITY
         ICM   R14,15,VTFUSED      GET THE AMOUNT USED
         BM    LIMUNUAL      IF MINUS, WE DON'T KNOW
         L     R14,VTFALLOC  GET ALLOC
         S     R14,VTFUSED   MINUS THE AMOUNT USED
LIMUNUAL L     R1,REFNUM     GET THE ENTERED VALUE
         L     R1,0(R1)      NOW ITS VALUE FOR REAL
         CR    R14,R1        COMPARE THE VALUES
         B     COMPDONE      THEN GO CHECK THE OPERANDS
LIMPCT   DS    0H
*
*        PER CENT
*
         SR    R2,R2          CLEAR A WORK REG                     022G
         L     R6,FORMATAD   POINT TO THE FORMATTED VTOC
         USING VTFMT,R6      SET ADDRESSABILITY
         SR    R14,R14       CLEAR A REGISTER
         ICM   R15,15,VTFUSED      GET THE AMOUNT USED
         BM    LIMP100       IF UNKNOWN USED, SET 100 PER CENT
         CLC   VTFALLOC,ZERO ZERO ALLOCATED SPACE?
         BNE   LIMPCTOK      NO, CONTINUE
         CLC   VTFUSED,ZERO  ZERO USED SPACE?
         BE    LIMPCOMP      YES, PCT IS ZERO
*              ZERO ALLOCATED, NONZERO USED, INCLUDE THIS ONE
         B     COMPYES
LIMP100  LA    R15,100       SET UP 100 PER CENT
         B     LIMPCOMP      GO COMPARE
LIMPCTOK M     R14,F100      MULTIPLY BY 100 PERCENT
         D     R14,VTFALLOC  DIVIDE BY THE ALLOCATION
LIMPCOMP L     R1,REFNUM     GET THE VALUE ADDRESS
         L     R1,0(R1)      THEN THE VALUE
         CR    R15,R1        THEN COMPARE THEM
         B     COMPDONE      THEN GO SIFT THROUGH THE OPERANDS
LIMDSN   DS    0H                                                  016G
*                                                                  016G
*        DSNAME CHECKING                                           016G
*                                                                  016G
         SR    R2,R2          CLEAR A WORK REG                     022G
         MVI   HOLDSDSN,C' '             CLEAR HOLD AREA.          016G
         MVC   HOLDSDSN+1(43),HOLDSDSN   CLEAR HOLD AREA.          016G
         MVI   HOLDVDSN,C' '             CLEAR HOLD AREA.          016G
         MVC   HOLDVDSN+1(43),HOLDVDSN   CLEAR HOLD AREA.          016G
         L     R6,FORMATAD    POINT TO THE FORMATTED VTOC.         016G
         USING VTFMT,R6       SET ADDRESSABILITY.                  016G
         SR    R2,R2          CLEAR WORK REG.                      016G
         LH    R2,VTFDSNL     GET THE LENGTH OF DSNAME.            016G
         BCTR  R2,0           DOWN ONE FOR AN EX.                  016G
         LA    R1,VTFDSN      GET A(VTFDSN).                       016G
         EX    R2,MOVEVDSN    MOVE VTFDSN TO WORK AREA.            016G
         L     R4,REFVAL      GET THE VALUE PDE.                   016G
         LH    R2,4(R4)       GET THE LENGTH OF THE STRING.        016G
         BCTR  R2,0           DOWN ONE FOR AN EX.                  016G
         L     R1,0(R4)       GET A(STRING).                       016G
         EX    R2,MOVESDSN    MOVE STRING TO WORK AREA.            016G
         LA    R1,HOLDSDSN    GET A(STRING DSN).                   016G
         LA    R2,HOLDVDSN    GET A(STRING DSN).                   016G
         LA    R3,43          SET L(STRING VS VTFDSN COMPARE).     016G
         EX    R3,COMPLIM     COMPARE AS SPECIFIED.                016G
         B     COMPDONE       YES, DO STANDARD COMPARISON.         016G
*
*        CCHH CHECKING IS NOT QUITE STANDARD BECAUSE THERE MAY
*        MAY BE UP TO 127 EXTENTS TO COMPARE.  THE DATA MAY BE     017G
*        CC OR CCHH FORMATS.  THE DATA SET MAY BE EQUAL TO,
*        LESS THAN, AND GREATER THAN ANY PARTICULAR VALUE.
*
LIMCCHH  DS    0H
*
*        FIRST SEE IF THE CCHH WAS CONVERTED
*              CONVERT IT IF NOT, SKIP IF IT'S DONE
*
         L     R5,REFNUM     GET THE ADDRESS OF THE COMPARISON VALUE
         L     R4,0(R5)      GET THE VALUE
         ICM   R6,3,4(R5)    GET THE COMPARE LENGTH
         BP    LIMCSET       IF IT'S SET, THE CONVERSION IS DONE
*                      IT WASN'T SET, CONVERT FROM CHARS TO BINARY
         L     R1,REFVAL     GET THE ADDRESS OF THE IKJIDENT
         L     R2,0(R1)      POINT TO THE TEXT
         LH    R3,4(R1)      GET THE LENGTH OF THE TEXT
*        IT SHOULD BE 4 OR 8 CHARACTERS
         XC    DOUBLE,DOUBLE CLEAR OUT A PLACE TO WORK
         CH    R3,H4         IS IT A CYLINDER ONLY?
         BH    LIMCCON2      NO, TRY FOR A CCHH
         BE    LIMCCON1      YES, JUST CONVERT IT
         VTOCMSG CCHHLEN     LESS THAN FOUR CHARS, ISSUE A MSG
LIMCCON1 LA    R6,1          SET THE COMPARE LENGTH
         B     LIMCMOVE      GO MOVE IT IN
LIMCCON2 LA    R6,3          SET THE COMPARE LENGTH
         CH    R3,H8         WAS IT A CCHH?
         BE    LIMCMOVE      YES, JUST THE RIGHT LENGTH
         VTOCMSG CCHHLEN     WARN THE PERSON
         CH    R3,H8         CHECK AGAIN
         BL    LIMCMOVE      IS IT OVER 8 CHARS?
         LH    R3,H8         YES, SET IT FOR THE MAX - IGNORE RR
LIMCMOVE BCTR  R3,0          MINUS ONE FOR THE EX
         EX    R3,MOVECCHH   MOVE IN THE CHARS
         TR    DOUBLE,DECTABLE TRANSLATE HEX EBCDIC TO HEX BINARY
         PACK  CYLH(5),DOUBLE(9)  SQUISH OUT THE ZONES
         L     R4,CYLH       GET THE CCHH
         ST    R4,0(R5)      SAVE IT FOR LATER
         STH   R6,4(R5)      SAVE THE LENGTH TOO
LIMCSET  DS    0H            THE NUMBER IS CONVERTED
*
*        COMPARE THE EXTENTS TO THE CCHH VALUE.
*        ANY EXTENT MAY BE LT, EQ, AND GT A PARTICULAR
*        VALUE, AND ALL THE EXTENTS MUST BE CHECKED.
*
         MVI   CCHHCOMP,0    CLEAR THE FLAGS
         SR    R2,R2         CLEAR A REG FOR AN EXTENT COUNTER
         ICM   R2,1,DS1NOEPV GET THE NUMBER OF EXTENTS
         BZ    COMPNO        NO EXTENTS, JUST GO SEE
*
*        GET EACH EXTENT AND PROCESS IT
*
*        SR    R1,R1         FIRST EXTENT                          017G
*XTNEXT  LR    R3,R1         GET THE CURRENT EXTENT                017G
*        SLL   R3,2          TIMES 4                               017G
*        EX    R0,GETEXT(R3) GET THE EXTENT ADDRESS INTO R3        017G
         SR    R1,R1         FIRST EXTENT                          017G
EXTNEXT  LR    R3,R1         GET THE CURRENT EXTENT                017G
         CH    R3,H2         IS IT IN FMT1 DSCB?                   017G
         BH    EXTFMT3       NO, IT'S IN FMT3 DSCB.                017G
         SLL   R3,2          TIMES 4                               017G
         EX    R0,GETEXT(R3) GET THE EXTENT ADDRESS INTO R3        017G
         B     EXTGOT                                              017G
EXTFMT3  DS    0H            MUST PROCESS FMT3 DIFFERENTLY.        017G
         SH    R3,H3         MAKE IT RELATIVE TO BEGIN FMT3.       017G
         MH    R3,H10        CALCULATE OFFSET FROM BEGIN FMT3.     017G
         LA    R3,FMT3(R3)   GET A(CURRENT EXT).                   017G
EXTGOT   DS    0H            GOT A(EXTENT).                        017G
*
*        CHECK THE BOTTOM OF THE EXTENT
*
         NI    CCHHCOMP,255-CCHHX TURN OFF THE STRADDLE FLAG
         EX    R6,CLCEXTLO    DO THE COMPARE
         BH    SETH1         THE FIELD IS HIGHER THAN THE VALUE
         BE    SETEQ1        THE FIELD IS EQUAL TO THE VALUE
         OI    CCHHCOMP,CCHHLOW+CCHHX  LOWER -  POSSIBLE STRADDLE
         B     CHECKHI       GO CHECK THE TOP OF THIS EXTENT
SETH1    OI    CCHHCOMP,CCHHHIGH  SET THE FLAG
         B     CHECKHI       GO CHECK THE TOP OF THIS EXTENT
SETEQ1   OI    CCHHCOMP,CCHHEQ   SET THE FLAG
*
*        CHECK THE TOP OF THE EXTENT
*
CHECKHI  EX    R6,CLCEXTHI   DO THE COMPARE
         BE    SETEQ2        EQUAL, GO SET IT
         BL    EXTSET        LOW, GO SET IT
*
*        THIS IS THE ONLY SLIGHTLY TRICKY PART, A STRADDLE
*        IF THE BOTTOM OF THE EXTENT IS LOWER THAN THE VALUE AND THE
*        TOP OF THE EXTENT IS HIGHER THAN THE VALUE, THEN THE
*        EQ FLAG SHOULD BE SET TOO.
*
         OI    CCHHCOMP,CCHHHIGH  SET THE HIGH FLAG
         TM    CCHHCOMP,CCHHX     WAS THE BOTTOM LOWER THAN THE VALUE?
         BZ    EXTSET        NO, SKIP ON
SETEQ2   OI    CCHHCOMP,CCHHEQ    SET THE EQ FLAG
*
*        FINISHED WITH THAT EXTENT, CHECK FOR MORE
*
EXTSET   DS    0H
         LA    R1,1(R1)      INCREMENT THE EXTENT COUNTER
         CR    R1,R2         CHECK THE EXTENT COUNTER
         BNL   LIMCOPER      THAT'S ALL FOLKS
         TM    CCHHCOMP,CCHHHIGH+CCHHEQ+CCHHLOW  ARE THEY ALL SET?
         BNO   EXTNEXT       NO, CONTINUE LOOKING
*                            YES, STOP NOW - ALL THE FLAGS ARE SET
LIMCOPER L     R4,REFOPER    GET THE NUMERIC VALUE OF THE KEY
         IC    R4,CCHHTAB(R4)  GET A FLAG MASK
         EX    R4,CCHHOPER   CHECK TO SEE IF THE CONDITION IS SET
         BZ    COMPNO        NOT THERE
         B     COMPYES       YES
*
*        EXECUTED INSTRUCTIONS TO GET THE ADDRESS OF THIS EXTENT
*
GETEXT   LA    R3,DS1EXT1     1ST EXTENT
         LA    R3,DS1EXT2     2ND EXTENT
         LA    R3,DS1EXT3     3RD EXTENT
*        LA    R3,DS3EXTNT    4TH EXTENT                           017G
*        LA    R3,DS3EXTNT+10 5TH EXTENT                           017G
*        LA    R3,DS3EXTNT+20 6TH EXTENT                           017G
*        LA    R3,DS3EXTNT+30 7TH EXTENT                           017G
*        LA    R3,DS3ADEXT    8TH EXTENT                           017G
*        LA    R3,DS3ADEXT+10 9TH EXTENT                           017G
*        LA    R3,DS3ADEXT+20 10TH EXTENT                          017G
*        LA    R3,DS3ADEXT+30 11TH EXTENT                          017G
*        LA    R3,DS3ADEXT+40 12TH EXTENT                          017G
*        LA    R3,DS3ADEXT+50 13TH EXTENT                          017G
*        LA    R3,DS3ADEXT+60 14TH EXTENT                          017G
*        LA    R3,DS3ADEXT+70 15TH EXTENT                          017G
*        LA    R3,DS3ADEXT+80 16TH EXTENT                          017G
*
*        SAVE FMT4 (VTOC) AND FMT6 EXTENT INFO
*
*                                      FMT4 ALREADY ADDED TO MAP.  005G
GOTFMT4  MVI   VTCCFUNC,0              INDICATE NO FMT5 PROCESSED. 005G
         CLC   DS4F6PTR,=XL5'0000000000'  IS THERE A FMT6?         005G
         BE    CHECKOUT                 NO, SKIP ALONG.            005G
         LA    R1,DS4F6PTR             YES, GET A(CCHHR ADDRESS).  005G
FMT6GET  L     R7,DSCBADDR             GET A(AREA TO READ INTO).   005G
         LA    R7,8(R7)                BUMP PAST HEADER AREA.      005G
         DROP  R7
         USING FMT6DSEC,R7             TELL ASSEMBLER.             005G
         LR    R15,R7                  GET A(AREA TO READ INTO).   005G
         BAL   R2,OBTAINIT             GET THE RECORD.             005G
         LTR   R15,R15                 TEST THE RETURN CODE.       005G
         BNZ   OBT6ERR                 BAD NEWS, ISSUE MESSAGE.    005G
         VTOCMAP ADD                   ADD SPLIT EXTENT TO MAP.    005G
         CLC   DS6PTRDS,=XL5'0000000000' IS THERE ANOTHER FMT6?    005G
         BE    CHECKOUT                NO, SKIP ALONG.             005G
         LA    R1,DS6PTRDS             YES, GET THE CCHHR ADDRESS. 005G
         B     FMT6GET                 GET THE NEXT FMT6.          005G
*
*        SAVE FMT5 EXTENT INFO
*
GOTFMT5  CLI   VTCCFUNC,0              HAVE ALL FMT5 BEEN PROCESSD.005G
         BNE   CHECKOUT                YES.                        005G
         MVI   VTCCFUNC,1              INDICATE FMT5 ALL PROCESSED.005G
NEXTFMT5 VTOCMAP ADD                   ADD FREE EXTENT TO MAP.     005G
         DROP  R7
         USING FMT5DSEC,R7             TELL ASSEMBLER.             005G
         L     R7,DSCBADDR             GET A(FMT5 JUST GOTTEN).    005G
         LA    R7,8(R7)                BUMP PAST HEADER.           005G
         CLC   DS5PTRDS,=XL5'0000000000'  IS THERE ANOTHER FMT5?   005G
         BE    CHECKOUT                 NO, SKIP ALONG.            005G
         LA    R1,DS5PTRDS             YES, GET THE CCHHR ADDRESS. 005G
         LR    R15,R7                  GET A(AREA TO READ INTO).   005G
         BAL   R2,OBTAINIT             GET THE RECORD.             005G
         LTR   R15,R15                 TEST THE RETURN CODE        005G
         BNZ   OBT5ERR                 ERROR ON OBTAIN.            005G
         B     NEXTFMT5                SAVE EXTENT INFO.           005G
*
*        ISSUE ERROR MESSAGES AND RETURN
*
OBT3ERR  MVC   MSGTEXT2,OBT3ERRM            MOVE MESSAGE.          007G
         MVC   MSGTEXT2+15(6),VOLID         MOVE VOLSER.           007G
         VTOCMSG MSGTEXT2                   ISSUE ERROR MESSAGE.   007G
         B     CHECKOUT                                            005G
OBT5ERR  MVC   MSGTEXT2,OBT5ERRM            MOVE MESSAGE.          007G
         MVC   MSGTEXT2+15(6),VOLID         MOVE VOLSER.           007G
         VTOCMSG MSGTEXT2                   ISSUE ERROR MESSAGE.   007G
         B     CHECKOUT                                            005G
OBT6ERR  MVC   MSGTEXT2,OBT6ERRM            MOVE MESSAGE.          007G
         MVC   MSGTEXT2+15(6),VOLID         MOVE VOLSER.           007G
         VTOCMSG MSGTEXT2                   ISSUE ERROR MESSAGE.   007G
         B     CHECKOUT                                            005G
CHECKOUT LA    R15,8          EXCLUDE THIS DATA SET
         B     CHEKRET        RETURN
*
CHECKIN  SR    R15,R15        CLEAR THE REGISTER, PROCESS THIS DATA SET
CHEKRET  VTCLEAVE EQ                                               009G
*
*
         EJECT
*
*        ROUTINES USED ABOVE
*
**************************************************************
*  ROUTINE TO OBTAIN A RECORD
* INPUT: R1=CCHHR OF RECORD TO OBTAIN
* CALLED VIA R2
**************************************************************
OBTAINIT ST    R15,CAMSEEK+12  SAVE A(AREA FOR THE DSCB).          005G
         ST    R1,CAMSEEK+4    SAVE A(CCHHR TO SEEK).              005G
         MVC   CAMSEEK(4),CAMSCON      MOVE FIRST WORD OF CAMLST.  005G
         LA    R1,VOLID       POINT TO THE VOLUME SERIAL
         ST    R1,CAMSEEK+8   SAVE IT
         OBTAIN CAMSEEK       GET THE DSCB
         BR    R2             RETURN TO CALLER.                    005G
         EJECT
*
*        PDLNUM - CONVERT FROM CHARACTERS ( EBCDIC ) TO AN INTEGER
*              BINARY FORM, PASSED BACK VIA REGISTER 15
*              A PARSE PDE IS THE INPUT AS SHOWN IN THE SAMPLE BELOW
*                       LA    R1,PDL     POINT TO THE PARSE DECRIPTION
*                       BAL   R8,PDLNUM  GO CONVERT TO NUMERICS
*              THE ROUTINE WILL TERMINATE IF IT FINDS NON-NUMERICS
*                 ANY CHARACTERS OTHER THEN 0-9, +, -
*              REGISTERS 1, 2, 5, 6, AND 7 ARE USED
*
PDLNUM   STM   R1,R8,PDLNSAVE SAVE THE REGISTERS
         LH    R2,4(R1)       GET THE STRING LENGTH
         L     R1,0(R1)       GET THE STRING ADDRESS
         MVI   PDLMINUS,0     CLEAR THE NEGATIVE NUMBER FLAG
         SR    R5,R5          CLEAR THE CHARACTER COUNTER
         SR    R15,R15        CLEAR THE ANSWER
PDLLOOP  LA    R6,0(R5,R1)    POINT TO THIS DIGIT
         LA    R5,1(R5)       GET TO THE NEXT DIGIT
         CR    R5,R2          IS THIS THE END OF THE STRING?
         BH    PDLFINI        YES, EXIT
         SR    R7,R7          CLEAR A WORK REGISTER
         IC    R7,0(R6)       GET THE CHARACTER
         SH    R7,PDLH240     SUBTRACT THE CHARACTER C'0'
         BM    PDLSP          IF NEGATIVE, CHECK SPECIAL CHARACTERS
         MH    R15,PDLH10     IT'S A DIGIT, MULTIPLY PRIOR NUM BY TEN
         AR    R15,R7         ADD ON THE NEW DIGIT
         B     PDLLOOP        AND LOOP FOR MORE
*
*        CHECK FOR SPECIAL CHARACTERS
*
PDLSP    CLI   0(R6),C' '     IS IT A BLANK?
         BE    PDLLOOP        THEN IT'S OK
         CLI   0(R6),C'+'     IS IT A PLUS?
         BE    PDLLOOP        THAT'S ALSO OK
         CLI   0(R6),C'-'     IS IT A MINUS?
         BNE   PDLFINI        NO, JUST QUIT
         MVI   PDLMINUS,1     YES, NOTE IT
         B     PDLLOOP        AND LOOK FOR MORE
*
*        QUIT, AFTER SETTING R15 TO NEGATIVE IF NEEDED
*
PDLFINI  CLI   PDLMINUS,1     WAS A MINUS SIGN FOUND?
         BNE   PDLLEAVE       NO, EXIT
         LNR   R15,R15        YES, MAKE IT NEGATIVE
PDLLEAVE LM    R1,R8,PDLNSAVE RESTORE THE REGISTERS
         BR    R8             RETURN
PDLH10   DC    H'10'
PDLH240  DC    H'240'
         EJECT
*
*        ROUTINE TO CONVERT A TEXT DSCB ITEM
*        INTO ITS KEY NUMBER
*        INPUT IS REG 4 - IKJIDENT PTR
*        OUTPUT IS REG 15 - KEY NUMBER
*        ENTRY VIA BAL   R8,GETKEY
*
GETKEY   L     R1,ATABTITL     POINT TO THE TABLE
         LA    R1,12(R1)     POINT TO THE FIRST ENTRY
         LA    R15,1           SET UP THE KEY NUMBER COUNTER
         L     R6,0(R4)      POINT TO THE ENTERED TEXT
         ICM   R3,3,4(R4)    GET THE LENGTH OF THE ENTERED TEXT
         BNP   GETKNOTF      NOT FOUND IF ZERO
         BCTR  R3,0          MINUS ONE FOR THE EX
GETKLOOP LA    R2,4(R1)      POINT TO THE COMPARISON TEXT
         CLI   0(R2),C' '    IS IT HERE?
         BNE   GETKSTD       YES, THIS IS IT
         LA    R2,1(R2)      NO, MOVE OVER ONE MORE
         CLI   0(R2),C' '    IS IT HERE?
         BNE   GETKSTD       YES, THIS IS IT
         LA    R2,1(R2)      NO, MOVE OVER ONE MORE
GETKSTD  EX    R3,GETKCOMP   COMPARE THE KEY TEXT
         BE    GETKFND       I FOUND IT
         LA    R1,12(R1)     GET TO THE NEXT KEY
         LA    R15,1(R15)    INCREMENT THE KEY COUNTER
*        CH    R15,H27       CHECK FOR THE END OF THE TABLE    012G024G
         CH    R15,H29       CHECK FOR THE END OF THE TABLE        024G
         BNH   GETKLOOP      NOT YET, KEEP LOOKING
*
*        KEY WAS NOT FOUND, SEND BACK A ZERO
*
GETKNOTF SR    R15,R15       SET UP THE ZERO AND RETURN
GETKFND  BR    R8            JUST RETURN
GETKCOMP CLC   0(0,R6),0(R2) EXECUTED TEXT COMPARE
*H27      DC    H'27'         PREVIOUSLY 26.                   012G024G
H29      DC    H'29'         PREVIOUSLY 27.                        024G
         EJECT
*
*        ROUTINE TO CONVERT THE OPERATOR TEXT
*        INTO A NUMERIC VALUE
*
GETOPER  LA    R15,1         NUMERIC VALUE COUNTER
GETOLOP1 LR    R14,R15       GET THE NUMBER                        014G
         SLA   R14,1         MULTIPLY BY 2
         LA    R14,OPERS1(R14)     RELOCATE IT                     014G
         CLC   0(2,R14),0(R1)      IS THIS THE TEXT?
         BE    GETOFND       YES, RETURN THE NUMBER
         LA    R15,1(R15)    NO, TRY THE NEXT ONE
         CH    R15,H7        CHECK FOR THE END
         BL    GETOLOP1      NOT THERE YET, KEEP TRYING            014G
*        GIVE A SECOND TRY FOR OTHER WAYS OF SAYING OPER.          014G
         LA    R15,1         NUMERIC VALUE COUNTER                 014G
GETOLOP2 LR    R14,R15       GET THE NUMBER                        014G
         SLA   R14,1         MULTIPLY BY 2                         014G
         LA    R14,OPERS2(R14)     RELOCATE IT                     014G
         CLC   0(2,R14),0(R1)      IS THIS THE TEXT?               014G
         BE    GETOFND       YES, RETURN THE NUMBER                014G
         LA    R15,1(R15)    NO, TRY THE NEXT ONE                  014G
         CH    R15,H7        CHECK FOR THE END                     014G
         BL    GETOLOP2      NOT THERE YET, KEEP TRYING            014G
         VTOCMSG OPERERR,OPERERR2  ISSUE THE MESSAGE
         LA    R15,1         SET THE DEFAULT OPERATOR, EQ
GETOFND  BR    R8            THEN RETURN
         EJECT
*
*        PROGRAM CONSTANTS
*
COMPLIM  CLC   0(0,R2),0(R1)      COMPARE KEYWORD TO VALUE
MOVEVDSN MVC   HOLDVDSN(0),0(R1)  MOVE VTFDSN TO WORK AREA.        016G
MOVESDSN MVC   HOLDSDSN(0),0(R1)  MOVE STRING TO WORK AREA.        016G
MOVECCHH MVC   DOUBLE(0),0(R2)
CLCEXTLO CLC   2(0,R3),0(R5)
CLCEXTHI CLC   6(0,R3),0(R5)
CCHHOPER TM    CCHHCOMP,0
CCHHTAB  DC    X'0040A0206080C0'  CCHHCOMP FLAGS
OPERS1   DC    C'  EQNELTLEGTGE'                                   014G
OPERS2   DC    C'  = ¬=< <=> >='                                   014G
*    FOR  EQ, NE, LT, LE, GT, GE
PERIOD   DC    C'.'                                                019G
EDMASK   DC    XL16'40202020202020202020202020202120'
BLANKS   DC    CL16'                '
STARS    DC    CL16'****************'
BLKTRTAB DC    XL64'00',X'04',XL192'00'
CAMSCON  CAMLST SEEK,*,*,*
COMPARE  CLC   0(0,R6),0(R2)  EXECUTED COMPARE
DECTABLE EQU   *-C'A'   CONVERT EBCDIC HEX TO BINARY
         DC    X'0A0B0C0D0E0F'
         DC    (C'0'-C'F'-1)X'FF'  FILLER
         DC    X'00010203040506070809'
*
*
*
H2       DC    H'2'                                                017G
H3       DC    H'3'
H4       DC    H'4'
H7       DC    H'7'
H8       DC    H'8'
H10      DC    H'10'
H12      DC    H'12'
ZERO     DC    F'0'
F100     DC    F'100'
H1000    DC    H'1000'
F127     DC    F'127'
*
*
*
*        PROGRAM MESSAGES
*
* 001G 005G 006G 001G 005G 006G 021G BELOW 7 LINES CHANGED
OBT3ERRM VTCMSG ' VTOCCHEK -VVVVVV- ERROR IN OBTAIN ON FMT 3 DSCB '
OBT5ERRM VTCMSG ' VTOCCHEK -VVVVVV- ERROR IN OBTAIN ON FMT 5 DSCB '
OBT6ERRM VTCMSG ' VTOCCHEK -VVVVVV- ERROR IN OBTAIN ON FMT 6 DSCB '
KEYERR   VTCMSG ' VTOCCHEK - LIM, AND, OR OR SUBPARM ERROR - XXXXXX '
CCHHLEN  VTCMSG ' VTOCCHEK - CCHH SHOULD BE 4 OR 8 HEX CHARS '
OPERERR VTCMSG ' VTOCCHEK - OPERATOR WAS NOT EQ, NE, LT, LE, GT, OR GE'
OPERERR2 VTCMSG '          - ASSUMING EQ'
BADDATE  VTCMSG ' VTOCCHEK - USE JULIAN DATE (YYDDD) OR *'
*
         EJECT
*
*
*        P A R S E   C O N T R O L   L I S T
*
*
         COPY  VTCPARS                                             009G
*
*        DYNAMIC WORK AREA
*
         SPACE 3
CHEKWORK DSECT
         DS    18A            PRINT ROUTINE SAVE AREA
CHARS    DS    CL16           CONVERSION TO CHARACTERS
CAMSEEK  CAMLST SEEK,*,*,*
CAMLEN   EQU   *-CAMSEEK
         DS    0D
CYLH     DS    F
         DS    X              PAD FOR CCHH
EQ       EQU   1              EQUATES FOR OPERATOR VALUES
NE       EQU   2
LT       EQU   3
LE       EQU   4
GT       EQU   5
GE       EQU   6
HWORK    DS    H
LIMVAL   DS    F
NUMBERL  DS    F
NUMLENL  DS    H
FLAGNML  DS    X
NUMKEYL  DS    X
NUMBER1  DS    F
NUMLEN1  DS    H
FLAGNM1  DS    X
NUMKEY1  DS    X
NUMBER2  DS    F
NUMLEN2  DS    H
FLAGNM2  DS    X
NUMKEY2  DS    X
NUMBER3  DS    F
NUMLEN3  DS    H
FLAGNM3  DS    X
NUMKEY3  DS    X
NUMBER4  DS    F                                                   013G
NUMLEN4  DS    H                                                   013G
FLAGNM4  DS    X                                                   013G
NUMKEY4  DS    X                                                   013G
NUMBER5  DS    F                                                   013G
NUMLEN5  DS    H                                                   013G
FLAGNM5  DS    X                                                   013G
NUMKEY5  DS    X                                                   013G
REFKEY   DS    F
REFOPER  DS    F
REFVAL   DS    A
REFNUM   DS    A
PDLNSAVE DS    8A             REGISTER SAVE AREA FOR PDLNUM RTN
PDLMINUS DC    X'00'
CHEKDBLW DS    D
CCHHCOMP DS    X
CCHHHIGH EQU   X'80'
CCHHEQ   EQU   X'40'
CCHHLOW  EQU   X'20'
CCHHX    EQU   X'08'
HOLDVDSN DS    CL44                 TO EXPAND VTFDSN TO 44 BYTES.  016G
HOLDSDSN DS    CL44                 TO EXPAND STRING TO 44 BYTES.  016G
         DS    0D
LENWORK  EQU   *-CHEKWORK
         VTOCMAP EQ                                                005G
*
*        VTOC COMMAND COMMON AREA
*
         VTCCOM                                                    009G
         SPACE 3
*
*        FORMATTED DSCB
*
         VTCFMT                                                    009G
         SPACE 3
         VTCPDEDS                                                  009G
         SPACE 3
         SPACE 3
FMT1DSEC DSECT                                                     005G
         IECSDSL1 (1)
FMT3DSEC DSECT                                                     017G
         IECSDSL1 (3)
FMT5DSEC DSECT                                                     005G
         IECSDSL1 (5)
FMT6DSEC DSECT                                                     005G
         IECSDSL1 (6)
         CVT   DSECT=YES                                           021G
         END
